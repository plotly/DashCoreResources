version: "2.0.12"
name: "dash_html_components"
prefix: "html"
components:
  - name: A
    args:
      - shape
      - dir
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - referrerPolicy
      - accessKey
      - hidden
      - hrefLang
      - download
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - target
      - style
      - children
      - id
      - href
      - role
      - spellCheck
      - className
      - rel
      - tabIndex
      - media
    wild_args:
      - data
      - aria
    docstr: |-
      An A component
      A is a wrapper for the <a> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `download` (String; optional): Indicates that the hyperlink is to be used for downloading a resource.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `href` (String; optional): The URL of a linked resource.
      - `hrefLang` (String; optional): Specifies the language of the linked resource.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `media` (String; optional): Specifies a hint of the media for which the linked resource was designed.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `referrerPolicy` (String; optional): Specifies which referrer is sent when fetching the resource.
      - `rel` (String; optional): Specifies the relationship of the target object to the link object.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `shape` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `target` (String; optional): Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Abbr
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Abbr component
      Abbr is a wrapper for the <abbr> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Acronym
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Acronym component
      Acronym is a wrapper for the <acronym> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Address
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Address component
      Address is a wrapper for the <address> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Area
    args:
      - shape
      - dir
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - referrerPolicy
      - accessKey
      - hidden
      - download
      - title
      - lang
      - disable_n_clicks
      - coords
      - n_clicks
      - contentEditable
      - alt
      - target
      - style
      - children
      - id
      - href
      - role
      - spellCheck
      - className
      - rel
      - tabIndex
      - media
    wild_args:
      - data
      - aria
    docstr: |-
      An Area component
      Area is a wrapper for the <area> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `alt` (String; optional): Alternative text in case an image can't be displayed.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `coords` (String; optional): A set of values specifying the coordinates of the hot-spot region.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `download` (String; optional): Indicates that the hyperlink is to be used for downloading a resource.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `href` (String; optional): The URL of a linked resource.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `media` (String; optional): Specifies a hint of the media for which the linked resource was designed.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `referrerPolicy` (String; optional): Specifies which referrer is sent when fetching the resource.
      - `rel` (String; optional): Specifies the relationship of the target object to the link object.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `shape` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `target` (String; optional): Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Article
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Article component
      Article is a wrapper for the <article> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Aside
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Aside component
      Aside is a wrapper for the <aside> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Audio
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - muted
      - accessKey
      - hidden
      - loop
      - title
      - autoPlay
      - lang
      - disable_n_clicks
      - n_clicks
      - controls
      - src
      - contentEditable
      - style
      - crossOrigin
      - children
      - id
      - preload
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Audio component
      Audio is a wrapper for the <audio> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `autoPlay` ('autoPlay', 'autoplay', 'AUTOPLAY' | Bool; optional): The audio or video should play as soon as possible.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `controls` ('controls', 'CONTROLS' | Bool; optional): Indicates whether the browser should show playback controls to the user.
      - `crossOrigin` (String; optional): How the element handles cross-origin requests
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `loop` ('loop', 'LOOP' | Bool; optional): Indicates whether the media should start playing from the start when it's finished.
      - `muted` ('muted', 'MUTED' | Bool; optional): Indicates whether the audio will be initially silenced on page load.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `preload` (String; optional): Indicates whether the whole resource, parts of it or nothing should be preloaded.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: B
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A B component
      B is a wrapper for the <b> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Base
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - target
      - style
      - children
      - id
      - href
      - role
      - spellCheck
      - className
      - tabIndex
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Base component
      Base is a wrapper for the <base> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `href` (String; optional): The URL of a linked resource.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `target` (String; optional): Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Basefont
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Basefont component
      Basefont is a wrapper for the <basefont> HTML5 element.
      
      OBSOLETE: <basefont> is included for completeness, but should be avoided
      as it is only supported by Internet Explorer.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Bdi
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Bdi component
      Bdi is a wrapper for the <bdi> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Bdo
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Bdo component
      Bdo is a wrapper for the <bdo> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Big
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Big component
      Big is a wrapper for the <big> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Blink
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Blink component
      Blink is a wrapper for the <blink> HTML5 element.
      
      OBSOLETE: <blink> is included for completeness, but should be avoided
      as it is not supported by any modern browsers.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Blockquote
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - cite
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Blockquote component
      Blockquote is a wrapper for the <blockquote> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `cite` (String; optional): Contains a URI which points to the source of the quote or change.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Br
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Br component
      Br is a wrapper for the <br> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Button
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - disabled
      - accessKey
      - hidden
      - autoFocus
      - formMethod
      - form
      - title
      - lang
      - disable_n_clicks
      - formEncType
      - formNoValidate
      - n_clicks
      - formAction
      - contentEditable
      - name
      - formTarget
      - style
      - children
      - value
      - id
      - type
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Button component
      Button is a wrapper for the <button> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `autoFocus` ('autoFocus', 'autofocus', 'AUTOFOCUS' | Bool; optional): The element should be automatically focused after the page loaded.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `disabled` ('disabled', 'DISABLED' | Bool; optional): Indicates whether the user can interact with the element.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `formAction` (String; optional): Indicates the action of the element, overriding the action defined in the <form>.
      - `formEncType` (String; optional): If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner.
      - `formMethod` (String; optional): If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.
      - `formNoValidate` ('formNoValidate', 'formnovalidate', 'FORMNOVALIDATE' | Bool; optional): If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner.
      - `formTarget` (String; optional): If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the target attribute of the button's form owner.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Canvas
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - height
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - width
    wild_args:
      - data
      - aria
    docstr: |-
      A Canvas component
      Canvas is a wrapper for the <canvas> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `height` (String; optional): Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `width` (String; optional): For the elements listed here, this establishes the element's width. Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.
  - name: Caption
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Caption component
      Caption is a wrapper for the <caption> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Center
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Center component
      Center is a wrapper for the <center> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Cite
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Cite component
      Cite is a wrapper for the <cite> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Code
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Code component
      Code is a wrapper for the <code> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Col
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - span
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Col component
      Col is a wrapper for the <col> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `span` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Colgroup
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - span
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Colgroup component
      Colgroup is a wrapper for the <colgroup> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `span` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Content
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Content component
      Content is a wrapper for the <content> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/content
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Data
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - value
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Data component
      Data is a wrapper for the <data> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Datalist
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Datalist component
      Datalist is a wrapper for the <datalist> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Dd
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Dd component
      Dd is a wrapper for the <dd> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Del
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - cite
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dateTime
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Del component
      Del is a wrapper for the <del> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `cite` (String; optional): Contains a URI which points to the source of the quote or change.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dateTime` (String; optional): Indicates the date and time associated with the element.
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Details
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - open
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Details component
      Details is a wrapper for the <details> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `open` ('open', 'OPEN' | Bool; optional): Indicates whether the contents are currently visible (in the case of a <details> element) or whether the dialog is active and can be interacted with (in the case of a <dialog> element).
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Dfn
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Dfn component
      Dfn is a wrapper for the <dfn> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Dialog
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - open
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Dialog component
      Dialog is a wrapper for the <dialog> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `open` ('open', 'OPEN' | Bool; optional): Indicates whether the contents are currently visible (in the case of a <details> element) or whether the dialog is active and can be interacted with (in the case of a <dialog> element).
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Div
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Div component
      Div is a wrapper for the <div> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Dl
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Dl component
      Dl is a wrapper for the <dl> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Dt
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Dt component
      Dt is a wrapper for the <dt> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Em
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Em component
      Em is a wrapper for the <em> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Embed
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - height
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - src
      - contentEditable
      - style
      - children
      - id
      - type
      - role
      - spellCheck
      - tabIndex
      - className
      - width
    wild_args:
      - data
      - aria
    docstr: |-
      An Embed component
      Embed is a wrapper for the <embed> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `height` (String; optional): Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
      - `width` (String; optional): For the elements listed here, this establishes the element's width. Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.
  - name: Fieldset
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - disabled
      - accessKey
      - hidden
      - form
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Fieldset component
      Fieldset is a wrapper for the <fieldset> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `disabled` ('disabled', 'DISABLED' | Bool; optional): Indicates whether the user can interact with the element.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Figcaption
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Figcaption component
      Figcaption is a wrapper for the <figcaption> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Figure
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Figure component
      Figure is a wrapper for the <figure> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Font
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Font component
      Font is a wrapper for the <font> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Footer
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Footer component
      Footer is a wrapper for the <footer> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Form
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - method
      - title
      - action
      - lang
      - disable_n_clicks
      - n_clicks
      - noValidate
      - contentEditable
      - name
      - encType
      - target
      - style
      - accept
      - autoComplete
      - children
      - id
      - acceptCharset
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Form component
      Form is a wrapper for the <form> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accept` (String; optional): List of types the server accepts, typically a file type.
      - `acceptCharset` (String; optional): List of supported charsets.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `action` (String; optional): The URI of a program that processes the information submitted via the form.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `autoComplete` (String; optional): Indicates whether controls in this form can by default have their values automatically completed by the browser.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `encType` (String; optional): Defines the content type of the form data when the method is POST.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `method` (String; optional): Defines which HTTP method to use when submitting the form. Can be GET (default) or POST.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `noValidate` ('noValidate', 'novalidate', 'NOVALIDATE' | Bool; optional): This attribute indicates that the form shouldn't be validated when submitted.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `target` (String; optional): Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Frame
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Frame component
      Frame is a wrapper for the <frame> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Frameset
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Frameset component
      Frameset is a wrapper for the <frameset> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: H1
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A H1 component
      H1 is a wrapper for the <h1> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: H2
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A H2 component
      H2 is a wrapper for the <h2> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: H3
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A H3 component
      H3 is a wrapper for the <h3> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: H4
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A H4 component
      H4 is a wrapper for the <h4> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: H5
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A H5 component
      H5 is a wrapper for the <h5> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: H6
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A H6 component
      H6 is a wrapper for the <h6> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Header
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Header component
      Header is a wrapper for the <header> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Hgroup
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Hgroup component
      Hgroup is a wrapper for the <hgroup> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Hr
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Hr component
      Hr is a wrapper for the <hr> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: I
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An I component
      I is a wrapper for the <i> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Iframe
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - height
      - n_clicks_timestamp
      - draggable
      - referrerPolicy
      - accessKey
      - hidden
      - allow
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - src
      - contentEditable
      - name
      - sandbox
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - srcDoc
      - className
      - width
    wild_args:
      - data
      - aria
    docstr: |-
      An Iframe component
      Iframe is a wrapper for the <iframe> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `allow` (String; optional): Specifies a feature-policy for the iframe.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `height` (String; optional): Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `referrerPolicy` (String; optional): Specifies which referrer is sent when fetching the resource.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `sandbox` (String; optional): Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `srcDoc` (String; optional)
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `width` (String; optional): For the elements listed here, this establishes the element's width. Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.
  - name: Img
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - height
      - n_clicks_timestamp
      - draggable
      - referrerPolicy
      - accessKey
      - hidden
      - srcSet
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - src
      - contentEditable
      - alt
      - useMap
      - style
      - crossOrigin
      - children
      - id
      - sizes
      - role
      - spellCheck
      - tabIndex
      - className
      - width
    wild_args:
      - data
      - aria
    docstr: |-
      An Img component
      Img is a wrapper for the <img> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `alt` (String; optional): Alternative text in case an image can't be displayed.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `crossOrigin` (String; optional): How the element handles cross-origin requests
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `height` (String; optional): Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `referrerPolicy` (String; optional): Specifies which referrer is sent when fetching the resource.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `sizes` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `srcSet` (String; optional): One or more responsive image candidates.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `useMap` (String; optional)
      - `width` (String; optional): For the elements listed here, this establishes the element's width. Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.
  - name: Ins
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - cite
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dateTime
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Ins component
      Ins is a wrapper for the <ins> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `cite` (String; optional): Contains a URI which points to the source of the quote or change.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dateTime` (String; optional): Indicates the date and time associated with the element.
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Kbd
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Kbd component
      Kbd is a wrapper for the <kbd> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Keygen
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Keygen component
      Keygen is a wrapper for the <keygen> HTML5 element.
      
      DEPRECATED: <keygen> is included for completeness, but should be avoided
      as it is not supported by all browsers and may be removed at any time from
      those that do support it.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Label
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - form
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - htmlFor
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Label component
      Label is a wrapper for the <label> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `htmlFor` (String; optional): Describes elements which belongs to this one.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Legend
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Legend component
      Legend is a wrapper for the <legend> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Li
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - value
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Li component
      Li is a wrapper for the <li> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Link
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - referrerPolicy
      - accessKey
      - hidden
      - hrefLang
      - title
      - integrity
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - crossOrigin
      - children
      - id
      - type
      - sizes
      - href
      - role
      - spellCheck
      - className
      - rel
      - tabIndex
      - media
    wild_args:
      - data
      - aria
    docstr: |-
      A Link component
      Link is a wrapper for the <link> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `crossOrigin` (String; optional): How the element handles cross-origin requests
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `href` (String; optional): The URL of a linked resource.
      - `hrefLang` (String; optional): Specifies the language of the linked resource.
      - `integrity` (String; optional): Specifies a Subresource Integrity value that allows browsers to verify what they fetch.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `media` (String; optional): Specifies a hint of the media for which the linked resource was designed.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `referrerPolicy` (String; optional): Specifies which referrer is sent when fetching the resource.
      - `rel` (String; optional): Specifies the relationship of the target object to the link object.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `sizes` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
  - name: Main
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Main component
      Main is a wrapper for the <main> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: MapEl
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A MapEl component
      MapEl is a wrapper for the <map> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Mark
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Mark component
      Mark is a wrapper for the <mark> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Marquee
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - loop
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Marquee component
      Marquee is a wrapper for the <marquee> HTML5 element.
      
      DEPRECATED: <marquee> is included for completeness, but should be avoided
      as browsers may remove it at any time.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `loop` ('loop', 'LOOP' | Bool; optional): Indicates whether the media should start playing from the start when it's finished.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Meta
    args:
      - key
      - loading_state
      - contextMenu
      - httpEquiv
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - style
      - children
      - id
      - role
      - content
      - charSet
      - className
      - spellCheck
      - tabIndex
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Meta component
      Meta is a wrapper for the <meta> HTML5 element.
      
      CAUTION: <meta> is included for completeness, but generally will not behave
      as expected since <meta> tags should be static HTML content in the <head> of
      the document. Dash components are dynamic <body> content.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `charSet` (String; optional): Declares the character encoding of the page or script.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `content` (String; optional): A value associated with http-equiv or name depending on the context.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `httpEquiv` (String; optional): Defines a pragma directive.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Meter
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - min
      - form
      - title
      - lang
      - disable_n_clicks
      - max
      - n_clicks
      - contentEditable
      - optimum
      - style
      - children
      - high
      - id
      - value
      - low
      - role
      - spellCheck
      - className
      - tabIndex
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Meter component
      Meter is a wrapper for the <meter> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `high` (String; optional): Indicates the lower bound of the upper range.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `low` (String; optional): Indicates the upper bound of the lower range.
      - `max` (String; optional): Indicates the maximum value allowed.
      - `min` (String; optional): Indicates the minimum value allowed.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `optimum` (String; optional): Indicates the optimal numeric value.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Nav
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Nav component
      Nav is a wrapper for the <nav> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Nobr
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Nobr component
      Nobr is a wrapper for the <nobr> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Noscript
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Noscript component
      Noscript is a wrapper for the <noscript> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: ObjectEl
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - height
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - form
      - title
      - lang
      - data
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - useMap
      - style
      - children
      - id
      - type
      - role
      - spellCheck
      - tabIndex
      - className
      - width
    wild_args:
      - data
      - aria
    docstr: |-
      An ObjectEl component
      ObjectEl is a wrapper for the <object> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data` (String; optional): Specifies the URL of the resource.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `height` (String; optional): Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
      - `useMap` (String; optional)
      - `width` (String; optional): For the elements listed here, this establishes the element's width. Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.
  - name: Ol
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - start
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - reversed
      - type
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Ol component
      Ol is a wrapper for the <ol> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `reversed` ('reversed', 'REVERSED' | Bool; optional): Indicates whether the list should be displayed in a descending order instead of an ascending order.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `start` (String; optional): Defines the first number if other than 1.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
  - name: Optgroup
    args:
      - key
      - loading_state
      - label
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - disabled
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Optgroup component
      Optgroup is a wrapper for the <optgroup> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `disabled` ('disabled', 'DISABLED' | Bool; optional): Indicates whether the user can interact with the element.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `label` (String; optional): Specifies a user-readable title of the element.
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Option
    args:
      - key
      - loading_state
      - label
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - disabled
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - value
      - id
      - selected
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Option component
      Option is a wrapper for the <option> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `disabled` ('disabled', 'DISABLED' | Bool; optional): Indicates whether the user can interact with the element.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `label` (String; optional): Specifies a user-readable title of the element.
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `selected` ('selected', 'SELECTED' | Bool; optional): Defines a value which will be selected on page load.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Output
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - form
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - htmlFor
      - name
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Output component
      Output is a wrapper for the <output> HTML5 element.
      
      CAUTION: <output> is included for completeness, but its typical usage
      requires the oninput attribute of the enclosing <form> element, which
      is not accessible to Dash.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `htmlFor` (String; optional): Describes elements which belongs to this one.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: P
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A P component
      P is a wrapper for the <p> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Param
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - style
      - children
      - value
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Param component
      Param is a wrapper for the <param> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Picture
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Picture component
      Picture is a wrapper for the <picture> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Plaintext
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Plaintext component
      Plaintext is a wrapper for the <plaintext> HTML5 element.
      
      OBSOLETE: <plaintext> is included for completeness, but should be avoided
      as browsers may remove it at any time, and its behavior when added
      dynamically by Dash is not what it would be statically on page load.
      Use <pre> or <code> instead.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Pre
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Pre component
      Pre is a wrapper for the <pre> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Progress
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - form
      - title
      - lang
      - disable_n_clicks
      - max
      - n_clicks
      - contentEditable
      - style
      - children
      - value
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Progress component
      Progress is a wrapper for the <progress> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `max` (String; optional): Indicates the maximum value allowed.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `value` (String; optional): Defines a default value which will be displayed in the element on page load.
  - name: Q
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - cite
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Q component
      Q is a wrapper for the <q> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `cite` (String; optional): Contains a URI which points to the source of the quote or change.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Rb
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Rb component
      Rb is a wrapper for the <rb> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Rp
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Rp component
      Rp is a wrapper for the <rp> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Rt
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Rt component
      Rt is a wrapper for the <rt> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Rtc
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Rtc component
      Rtc is a wrapper for the <rtc> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Ruby
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Ruby component
      Ruby is a wrapper for the <ruby> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: S
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A S component
      S is a wrapper for the <s> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Samp
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Samp component
      Samp is a wrapper for the <samp> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Script
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - referrerPolicy
      - accessKey
      - async
      - hidden
      - title
      - integrity
      - lang
      - disable_n_clicks
      - n_clicks
      - src
      - contentEditable
      - style
      - crossOrigin
      - children
      - id
      - type
      - role
      - spellCheck
      - charSet
      - defer
      - className
      - tabIndex
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Script component
      Script is a wrapper for the <script> HTML5 element.
      
      CAUTION: <script> is included for completeness, but you cannot execute
      JavaScript code by providing it to a <script> element. Use a clientside
      callback for this purpose instead.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `async` ('async', 'ASYNC' | Bool; optional): Executes the script asynchronously.
      - `charSet` (String; optional): Declares the character encoding of the page or script.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `crossOrigin` (String; optional): How the element handles cross-origin requests
      - `data-*` (String; optional): A wildcard data attribute
      - `defer` ('defer', 'DEFER' | Bool; optional): Indicates that the script should be executed after the page has been parsed.
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `integrity` (String; optional): Specifies a Subresource Integrity value that allows browsers to verify what they fetch.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `referrerPolicy` (String; optional): Specifies which referrer is sent when fetching the resource.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
  - name: Section
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Section component
      Section is a wrapper for the <section> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Select
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - size
      - draggable
      - disabled
      - accessKey
      - hidden
      - autoFocus
      - form
      - title
      - required
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - multiple
      - style
      - autoComplete
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Select component
      Select is a wrapper for the <select> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `autoComplete` (String; optional): Indicates whether controls in this form can by default have their values automatically completed by the browser.
      - `autoFocus` ('autoFocus', 'autofocus', 'AUTOFOCUS' | Bool; optional): The element should be automatically focused after the page loaded.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `disabled` ('disabled', 'DISABLED' | Bool; optional): Indicates whether the user can interact with the element.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `multiple` ('multiple', 'MULTIPLE' | Bool; optional): Indicates whether multiple values can be entered in an input of the type email or file.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `required` ('required', 'REQUIRED' | Bool; optional): Indicates whether this element is required to fill out or not.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `size` (String; optional): Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Shadow
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Shadow component
      Shadow is a wrapper for the <shadow> HTML5 element.
      
      DEPRECATED: <shadow> is included for completeness, but should be avoided
      as it is not supported by all browsers and may be removed at any time from
      those that do support it.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/shadow
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Slot
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Slot component
      Slot is a wrapper for the <slot> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Small
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Small component
      Small is a wrapper for the <small> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Source
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - srcSet
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - src
      - contentEditable
      - style
      - children
      - id
      - type
      - sizes
      - role
      - spellCheck
      - tabIndex
      - className
      - media
    wild_args:
      - data
      - aria
    docstr: |-
      A Source component
      Source is a wrapper for the <source> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `media` (String; optional): Specifies a hint of the media for which the linked resource was designed.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `sizes` (String; optional)
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `srcSet` (String; optional): One or more responsive image candidates.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `type` (String; optional): Defines the type of the element.
  - name: Spacer
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Spacer component
      Spacer is a wrapper for the <spacer> HTML5 element.
      
      OBSOLETE: <spacer> is included for completeness, but should be avoided
      as it is not supported by any modern browsers.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/spacer
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Span
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Span component
      Span is a wrapper for the <span> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Strike
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Strike component
      Strike is a wrapper for the <strike> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Strong
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Strong component
      Strong is a wrapper for the <strong> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Sub
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Sub component
      Sub is a wrapper for the <sub> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Summary
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Summary component
      Summary is a wrapper for the <summary> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Sup
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Sup component
      Sup is a wrapper for the <sup> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Table
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Table component
      Table is a wrapper for the <table> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Tbody
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Tbody component
      Tbody is a wrapper for the <tbody> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Td
    args:
      - key
      - loading_state
      - rowSpan
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - colSpan
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - headers
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Td component
      Td is a wrapper for the <td> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `colSpan` (String; optional): The colspan attribute defines the number of columns a cell should span.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `headers` (String; optional): IDs of the <th> elements which applies to this element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `rowSpan` (String; optional): Defines the number of rows a table cell should span over.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Template
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Template component
      Template is a wrapper for the <template> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Textarea
    args:
      - maxLength
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - disabled
      - wrap
      - accessKey
      - autoFocus
      - hidden
      - form
      - title
      - minLength
      - inputMode
      - required
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - name
      - placeholder
      - cols
      - style
      - autoComplete
      - rows
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - readOnly
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Textarea component
      Textarea is a wrapper for the <textarea> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `autoComplete` (String; optional): Indicates whether controls in this form can by default have their values automatically completed by the browser.
      - `autoFocus` ('autoFocus', 'autofocus', 'AUTOFOCUS' | Bool; optional): The element should be automatically focused after the page loaded.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `cols` (String; optional): Defines the number of columns in a textarea.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `disabled` ('disabled', 'DISABLED' | Bool; optional): Indicates whether the user can interact with the element.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `form` (String; optional): Indicates the form that is the owner of the element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `inputMode` (String; optional): Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `maxLength` (String; optional): Defines the maximum number of characters allowed in the element.
      - `minLength` (String; optional): Defines the minimum number of characters allowed in the element.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `name` (String; optional): Name of the element. For example used by the server to identify the fields in form submits.
      - `placeholder` (String; optional): Provides a hint to the user of what can be entered in the field.
      - `readOnly` (String; optional): Indicates whether the element can be edited.
      - `required` ('required', 'REQUIRED' | Bool; optional): Indicates whether this element is required to fill out or not.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `rows` (String; optional): Defines the number of rows in a text area.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `wrap` (String; optional): Indicates whether the text should be wrapped.
  - name: Tfoot
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Tfoot component
      Tfoot is a wrapper for the <tfoot> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Th
    args:
      - key
      - loading_state
      - rowSpan
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - scope
      - hidden
      - colSpan
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - headers
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Th component
      Th is a wrapper for the <th> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `colSpan` (String; optional): The colspan attribute defines the number of columns a cell should span.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `headers` (String; optional): IDs of the <th> elements which applies to this element.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `rowSpan` (String; optional): Defines the number of rows a table cell should span over.
      - `scope` (String; optional): Defines the cells that the header test (defined in the th element) relates to.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Thead
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Thead component
      Thead is a wrapper for the <thead> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Time
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dateTime
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Time component
      Time is a wrapper for the <time> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dateTime` (String; optional): Indicates the date and time associated with the element.
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Title
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Title component
      Title is a wrapper for the <title> HTML5 element.
      
      CAUTION: <title> is included for completeness, but is not expected to
      do anything outside of <head>. Dash components are always created in the
      <body>.
      
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Tr
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Tr component
      Tr is a wrapper for the <tr> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Track
    args:
      - default
      - key
      - loading_state
      - label
      - contextMenu
      - n_clicks_timestamp
      - srcLang
      - draggable
      - accessKey
      - hidden
      - kind
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - src
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Track component
      Track is a wrapper for the <track> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `default` ('default', 'DEFAULT' | Bool; optional): Indicates that the track should be enabled unless the user's preferences indicate something different.
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `kind` (String; optional): Specifies the kind of text track.
      - `label` (String; optional): Specifies a user-readable title of the element.
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `srcLang` (String; optional)
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: U
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An U component
      U is a wrapper for the <u> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Ul
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      An Ul component
      Ul is a wrapper for the <ul> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Var
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Var component
      Var is a wrapper for the <var> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Video
    args:
      - dir
      - key
      - loading_state
      - contextMenu
      - height
      - n_clicks_timestamp
      - draggable
      - muted
      - accessKey
      - hidden
      - loop
      - title
      - autoPlay
      - lang
      - disable_n_clicks
      - n_clicks
      - controls
      - src
      - poster
      - contentEditable
      - style
      - crossOrigin
      - children
      - id
      - preload
      - role
      - spellCheck
      - tabIndex
      - className
      - width
    wild_args:
      - data
      - aria
    docstr: |-
      A Video component
      Video is a wrapper for the <video> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `autoPlay` ('autoPlay', 'autoplay', 'AUTOPLAY' | Bool; optional): The audio or video should play as soon as possible.
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `controls` ('controls', 'CONTROLS' | Bool; optional): Indicates whether the browser should show playback controls to the user.
      - `crossOrigin` (String; optional): How the element handles cross-origin requests
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `height` (String; optional): Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `loop` ('loop', 'LOOP' | Bool; optional): Indicates whether the media should start playing from the start when it's finished.
      - `muted` ('muted', 'MUTED' | Bool; optional): Indicates whether the audio will be initially silenced on page load.
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `poster` (String; optional): A URL indicating a poster frame to show until the user plays or seeks.
      - `preload` (String; optional): Indicates whether the whole resource, parts of it or nothing should be preloaded.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `src` (String; optional): The URL of the embeddable content.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
      - `width` (String; optional): For the elements listed here, this establishes the element's width. Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.
  - name: Wbr
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Wbr component
      Wbr is a wrapper for the <wbr> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
  - name: Xmp
    args:
      - key
      - loading_state
      - contextMenu
      - n_clicks_timestamp
      - draggable
      - accessKey
      - hidden
      - title
      - lang
      - disable_n_clicks
      - n_clicks
      - contentEditable
      - style
      - children
      - id
      - role
      - spellCheck
      - tabIndex
      - className
      - dir
    wild_args:
      - data
      - aria
    docstr: |-
      A Xmp component
      Xmp is a wrapper for the <xmp> HTML5 element.
      For detailed attribute info see:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp
      
      - `children` (a list of or a singular dash component, string or number; optional): The children of this component
      - `id` (String; optional): The ID of this component, used to identify dash components
      in callbacks. The ID needs to be unique across all of the
      components in an app.
      - `accessKey` (String; optional): Keyboard shortcut to activate or add focus to the element.
      - `aria-*` (String; optional): A wildcard aria attribute
      - `className` (String; optional): Often used with CSS to style elements with common properties.
      - `contentEditable` (String; optional): Indicates whether the element's content is editable.
      - `contextMenu` (String; optional): Defines the ID of a <menu> element which will serve as the element's context menu.
      - `data-*` (String; optional): A wildcard data attribute
      - `dir` (String; optional): Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
      - `disable_n_clicks` (Bool; optional): When True, this will disable the n_clicks prop.  Use this to remove
      event listeners that may interfere with screen readers.
      - `draggable` (String; optional): Defines whether the element can be dragged.
      - `hidden` ('hidden', 'HIDDEN' | Bool; optional): Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
      - `key` (String; optional): A unique identifier for the component, used to improve
      performance by React.js while rendering components
      See https://reactjs.org/docs/lists-and-keys.html for more info
      - `lang` (String; optional): Defines the language used in the element.
      - `loading_state` (lists containing elements is_loading, prop_name, component_name   - `is_loading` (Bool; optional): Determines if the component is loading or not   - `prop_name` (String; optional): Holds which property is loading   - `component_name` (String; optional): Holds the name of the component that is loading; optional): Object that holds the loading state object coming from dash-renderer
      - `n_clicks` (optional): An integer that represents the number of times
      that this element has been clicked on.
      - `n_clicks_timestamp` (optional): An integer that represents the time (in ms since 1970)
      at which n_clicks changed. This can be used to tell
      which button was changed most recently.
      - `role` (String; optional): Defines an explicit role for an element for use by assistive technologies.
      - `spellCheck` (String; optional): Indicates whether spell checking is allowed for the element.
      - `style` (Dict; optional): Defines CSS styles which will override styles previously set.
      - `tabIndex` (String; optional): Overrides the browser's default tab order and follows the one specified instead.
      - `title` (String; optional): Text to be displayed in a tooltip when hovering over the element.
